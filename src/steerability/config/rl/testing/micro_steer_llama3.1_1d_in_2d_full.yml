# ==============================
# GRPOConfig/TrainingArguments arguments
# See https://huggingface.co/docs/transformers/main/en/main_classes/trainer#transformers.TrainingArguments for full list
# ==============================
output_dir: "/data2/ctrenton/llm/llama_3.1_micro_steer_grpo_1in2d_n1_i16_full_ft/"
run_name: "llama3.1_micro_steer_grpo_1in2d_n1_i16_full_ft"
remove_unused_columns: False
# ==============================
# Default generation args
# ==============================
max_prompt_length: 2048 # [MAXED] more than enough -- longest text in probe is ~1450 words. 
max_completion_length: 2048 # [MAXED] to give room for <think>ing
num_generations: 16 # [MAXED] llama 3.1. I have no idea how I fit this on 1 gpu
temperature: 0.6 
# ==============================
# Model/training args
# ==============================
attn_implementation: "flash_attention_2"
learning_rate: 5.0e-6
lr_scheduler_type: "cosine"
adam_beta1: 0.9
adam_beta2: 0.99
weight_decay: 0.1
warmup_ratio: 0.1
logging_steps: 1 # steps = n_examples / batch_size / grad_accumulation_steps
per_device_train_batch_size: 1
per_device_eval_batch_size: 1
gradient_accumulation_steps: 4
num_train_epochs: 32
beta: 0.04 # anneal?
model_name_or_path: "meta-llama/Llama-3.1-8B-Instruct"
# dtyping
bf16: True
bf16_full_eval: True # for deepspeed compat
logit_computation_mini_batch_size: 2
# checkpointing, saving, and logging
# ==============================
# Gradient Checkpointing
# ==============================
gradient_checkpointing: True # [DO NOT CHANGE] req'd otherwise initial forward OOM's. But the PR claims this is a pass-through on prompt caching?
gradient_checkpointing_kwargs:
    use_reentrant: False # [DO NOT CHANGE] I don't know how to explain this one. Just don't touch it.
torch_empty_cache_steps: 1
# ==============================
# Saving and logging
#
# Note that we omit eval in lieu of using a callback to generate responses -- the eye-test is the best catch for reward-hacking ;)
# ==============================
save_only_model: True # the optimizer states are like, 100G and cause the server to freak out
report_to: "wandb"
log_completions: False
# ==============================
# vLLM arguments 
# ==============================
use_vllm: True
vllm_device: "auto"
vllm_gpu_memory_utilization: 0.5
vllm_max_model_len: 4096
# ==============================
# Extra args
# ==============================
steerability_probe: "./data/steer_1d_in_2d.csv"
n_source_texts: 1
instructions_per_text: 16
apply_conversational_format: True
num_prompts_for_eval: 8
canary_file: "./data/2d_canaries.json"
# ==============================
# Goals to optimize
# ==============================
steering_goals: # extra reward kwargs will be passed to the reward funcs
    - "sadness"
    - "surprise"